syntax = "proto3";

option java_multiple_files = true;
option java_package = "vk.itmo.teamgray.sharded.storage";

package vk.itmo.teamgray.sharded.storage;

service ShardedStorage {
  rpc AddServer (AddServerRequest) returns (AddServerResponse);

  rpc DeleteServer (DeleteServerRequest) returns (DeleteServerResponse);

  rpc ChangeShardCount (ChangeShardCountRequest) returns (ChangeShardCountResponse);

  rpc GetValueByKey (GetValueByKeyRequest) returns (GetValueByKeyResponse);

  rpc ContainsKey (ContainsKeyRequest) returns (ContainsKeyResponse);

  rpc SetKey (SetKeyRequest) returns (SetKeyResponse);

  rpc SetFromFile (SetFromFileRequest) returns (SetFromFileResponse);

  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);
}

message AddServerRequest {
  //TODO Negotiate format
  string ip = 1;
  int32 port = 2;
  bool forkNewInstance = 3;
}

message AddServerResponse {
  //TODO Negotiate format
  bool success = 1;
  string message = 2;
}

message DeleteServerRequest {
  string ip = 1;
  int32 port = 2;
}

message DeleteServerResponse {
  bool success = 1;
  string message = 2;
}

message ChangeShardCountRequest {
  int32 newShardCount = 1;
}

message ChangeShardCountResponse {
  bool success = 1;
  string message = 2;
}

message GetValueByKeyRequest {
  string key = 1;
}

message GetValueByKeyResponse {
  bool success = 1;
  string value = 2;
}

message ContainsKeyRequest {
  string key = 1;
}

message ContainsKeyResponse {
  bool result = 1;
}

message SetKeyRequest {
  string key = 1;
  string value = 2;
}

message SetKeyResponse {
  bool success = 1;
}

message SetFromFileRequest {
  //TODO Negotiate format
  string filePath = 1;
}

message SetFromFileResponse {
  //TODO Negotiate format
  bool success = 1;
  string message = 2;
}

message HeartbeatRequest {
  int64 timestamp = 2;
}

message HeartbeatResponse {
  bool healthy = 1;
  int64 server_timestamp = 2;
  string status_message = 3;
}
