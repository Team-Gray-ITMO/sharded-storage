syntax = "proto3";

option java_multiple_files = true;
option java_package = "vk.itmo.teamgray.sharded.storage.master.client";

package vk.itmo.teamgray.sharded.storage;

service MasterClientService {
  rpc GetServerToShard (GetServerToShardRequest) returns (GetServerToShardResponse);

  rpc GetShardToHash (GetShardToHashRequest) returns (GetShardToHashResponse);

  rpc AddServer (AddServerRequest) returns (AddServerResponse);

  rpc DeleteServer (DeleteServerRequest) returns (DeleteServerResponse);

  rpc ChangeShardCount (ChangeShardCountRequest) returns (ChangeShardCountResponse);

  rpc Heartbeat (MasterHeartbeatRequest) returns (MasterHeartbeatResponse);
}

message GetServerToShardRequest {
}

message GetServerToShardResponse{
  // Map of server address (ip:port) to shard IDs
  map<string, IntList> serverToShard = 1;
}

message GetShardToHashRequest {
}

message GetShardToHashResponse{
  // Sorted map of upper bound hash (inclusive) by shard number, lower bound is defined by previous shard (exclusive)
  map<int32, int64> shardToHash = 1;
}

message IntList {
  repeated int32 values = 1;
}

message AddServerRequest {
  //TODO Negotiate format
  string ip = 1;
  int32 port = 2;
  bool forkNewInstance = 3;
}

message AddServerResponse {
  //TODO Negotiate format
  bool success = 1;
  string message = 2;
}

message DeleteServerRequest {
  string ip = 1;
  int32 port = 2;
}

message DeleteServerResponse {
  bool success = 1;
  string message = 2;
}

message ChangeShardCountRequest {
  int32 newShardCount = 1;
}

message ChangeShardCountResponse {
  bool success = 1;
  string message = 2;
}

message MasterHeartbeatRequest {
  int64 timestamp = 1;
}

message MasterHeartbeatResponse {
  bool healthy = 1;
  int64 serverTimestamp = 2;
  string statusMessage = 3;
}
